@inject IContactRepository contactRepository
@inject NavigationManager navigationManager
<!-- Modal -->
<EditForm Model="Model" OnSubmit="DeleteContact">
    <div class="modal" tabindex="-1" role="dialog" style="display:block;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Delete</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="HideModal">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete?</p>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-danger">Delete anyway!</button>
                    <button type="button" class="btn btn-success" @onclick="HideModal">No</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>
@code {
    [Parameter] public Contact Model { get; set; }
    [Parameter] public EventCallback HideModal { get; set; }
    [Parameter] public EventCallback<Contact> OnSubmit { get; set; }

    private async Task DeleteContact()
    {
        await OnSubmit.InvokeAsync(Model);
    }
}
